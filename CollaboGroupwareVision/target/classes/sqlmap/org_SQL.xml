<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.or.ddit.org.mapper.OrgMapper">
	
	<select id="getOrgTree" resultType="hashMap">
        SELECT 
		      emp_no id
		    , '#' parent
		    , emp_name || ' ' || get_common_code_name('100', position_code) text
		    , position_code
		    , 0 sort_order
		    , 'employee' type
		FROM
		    employee
		WHERE
		    dept_code IS NULL
		    AND enabled = 1
		UNION ALL
		SELECT
		      TO_CHAR(dept_code) id
		    , '#' parent
		    , dept_name text
		    , NULL position_code
		    , 1 sort_order
		    , 'dept' type
		FROM
		    dept
		WHERE
		    dept_del_day IS NULL
		UNION ALL
		SELECT 
		      emp_no id
		    , TO_CHAR(dept_code) parent
		    , emp_name || ' ' || get_common_code_name('100', position_code) text
		    , position_code
		    , 2 sort_order
		    , 'employee' type
		FROM
		    employee
		WHERE
		    dept_code IS NOT NULL
		    AND enabled = 1
		ORDER BY
		    sort_order, position_code, parent, id, text
	</select>
	
	<!-- 일반 조직도 상세보기 -->
	<select id="getOrgDetails" parameterType="string" resultType="employee">
		SELECT
		      e.emp_no
		    , e.emp_name
		    , e.profile_img_path
		    , d.dept_name
		    , get_common_code_name('100', e.position_code) position
		    , get_common_code_name('101', e.duty_code) duty
		    , e.emp_tel
		    , e.ext_no
		    , e.emp_email
		FROM
		    employee e
		LEFT OUTER JOIN
		    dept d ON e.dept_code = d.dept_code
		WHERE
		    e.emp_no = #{empNo}
	</select>
	
	<!-- *************관리자 전용************* -->
	<!-- 부서 추가 -->
	<insert id="createDept" parameterType="dept">
		<selectKey keyProperty="deptCode" resultType="int" order="BEFORE">
			SELECT seq_dept.nextval FROM DUAL
		</selectKey>
		INSERT INTO dept(
		  	  dept_code
			, dept_name
			, dept_reg_day
		) VALUES (
			  #{deptCode}
			, #{deptName}
			, TO_CHAR(SYSDATE, 'YYYYMMDD')
		)
	</insert>
	
	<!-- 부서 임시삭제 -->
	<update id="softDeleteDept" parameterType="int">
		UPDATE dept
		SET dept_del_day = TO_CHAR(SYSDATE, 'YYYYMMDD')
		WHERE dept_code = #{deptCode}
	</update>
	
	
	<resultMap type="dept" id="deptMap">
		<id property="deptCode" column="dept_code"/>
		<result property="deptName" column="dept_name"/>
		<result property="deptRegDay" column="dept_reg_day"/>
		<collection property="deptMemList" resultMap="deptMem"/>
	</resultMap>
	
	<resultMap type="employee" id="deptMem">
		<result property="empNo" column="emp_no"/>
		<result property="empName" column="emp_name"/>
		<result property="position" column="position"/>
	</resultMap>
	
	<!-- 부서 정보 & 부서원 목록 가져오기 -->
	<select id="getDeptInfo" parameterType="int" resultMap="deptMap">
		SELECT 
		    d.dept_code
		    , d.dept_name
		    , d.dept_reg_day
		    , e.emp_no
		    , e.emp_name
		    , get_common_code_name('100', e.position_code) position
		FROM
		    dept d
		LEFT OUTER JOIN
		    employee e ON d.dept_code = e.dept_code AND e.enabled = 1
		WHERE
			d.dept_code = #{deptCode}
		ORDER BY e.position_code
	</select>
	
	<!-- 부서명 변경 -->
	<update id="updateDeptName" parameterType="dept">
		UPDATE dept
		SET dept_name = #{deptName}
		WHERE dept_code = #{deptCode}
	</update>
	
	<!-- 선택된 사람들 부서이동 -->
	<update id="transferDept" parameterType="map">
		UPDATE employee
		SET dept_code = #{targetDeptCode}
		WHERE emp_no IN
		<foreach collection="empNoList" item="empNo" open="(" separator="," close=")">
			#{empNo}
		</foreach>
	</update>
	
	<!-- 임시삭제 부서 목록 가져오기 -->
	<select id="getDeletedDeptData" resultType="dept">
		SELECT
			  dept_code
			, dept_name
			, dept_reg_day
			, dept_del_day
		FROM dept
		WHERE dept_del_day IS NOT NULL
		ORDER BY dept_code asc
	</select>
	
	<!-- 부서 영구삭제 -->
	<delete id="hardDeleteDept" parameterType="arrayList">
		DELETE FROM dept
		WHERE dept_code IN
		<foreach collection="list" item="deptCode" open="(" separator=", " close=")">
			#{deptCode}
		</foreach>
	</delete>
	
	<!-- 부서 복구 -->
	<update id="recoveryDept" parameterType="arrayList">
		UPDATE dept
		SET dept_del_day = NULL
		WHERE dept_code IN
		<foreach collection="list" item="deptCode" open="(" separator=", " close=")">
			#{deptCode}
		</foreach>
	</update>
	
	<!-- 사원 삭제목록 -->
	<select id="getDeletedEmpData" resultType="hashMap">
		SELECT
		      emp_no
		    , emp_name
		    , get_common_code_name('100', e.position_code) position
		    , emp_tel
		    , emp_del_day
		FROM employee
		WHERE enabled = 0
		ORDER BY emp_del_day DESC
	</select>
	
	<!-- 유효한 부서 목록 가져오기 -->
	<select id="getDeptList" resultType="dept">
		SELECT
			dept_code
			, dept_name
			, dept_reg_day
			, dept_del_day
		FROM dept
		WHERE dept_del_day IS NULL
	</select>
	
</mapper>